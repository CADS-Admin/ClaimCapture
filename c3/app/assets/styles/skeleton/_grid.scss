
// Grid
// ================================================================

//-----------------------------------------------------------------
// Measurements
//-----------------------------------------------------------------

$full-width: 100%;
$one-quarter: $full-width/4;
$one-third: $full-width/3;
$half: $full-width/2;
$two-thirds: ($full-width)-($one-third);
$three-quarters: ($full-width)-($one-quarter);

$gutter: 30px;
$gutter-one-quarter: $gutter/4;
$gutter-one-third: $gutter/3;
$gutter-half: $gutter/2;
$gutter-two-thirds: $gutter - $gutter-one-third;

$site-width: 960px;

//-----------------------------------------------------------------
// Grid System
//-----------------------------------------------------------------

// An extendable selector to wrap your entire site content block
// It limits the sites width to be 960px wide and maintains consistent margins
// on the site of the page and shrinks the margins for mobile.
//
// Usage:
//
// #page-container {
//   @extend %site-width-container;
// }

%site-width-container {
    max-width: $site-width;
    margin: 0 $gutter;
    @include ie-lte(8) {
        width: $site-width;
    }
    @include media($min-width: ($site-width + $gutter * 2)){
        margin: 0 auto;
    }
}

// An extendable selector to outdent to the full page-width
// So that you can create elements that take up the gutters on the side of the
// page and butt up to the edge of the browser on smaller screens (rather than
// leaving a gutter at the edge of the page).
//
// Usage:
//
// .hero-image-container {
//   @extend %outdent-to-full-width;
// }
%outdent-to-full-width {
    margin-left: -$gutter-half;
    margin-right: -$gutter-half;
    @include media(tablet) {
        margin-left: -$gutter;
        margin-right: -$gutter;
    }
}

// An extendable selector to define a row for grid columns to sit in
//
// Usage:
//
// .grid-row {
//     @extend %grid-row;
// }

%grid-row {
    @extend %contain-floats;
    margin: 0 (-$gutter-half);
}

// A mixin for a grid column
// Creates a cross browser grid column with a standardised gutter between the
// columns. Widths should be defined as fractions of the full desktop width
// they want to fill. By default they break to become full width at tablet size
// but that can be configured to be desktop using the `$full-width` argument.
//
// Usage:
//
//   .column-quarter {
//     @include grid-column( 1/4 );
//   }
//   .column-half {
//     @include grid-column( 1/2 );
//   }
//   .column-third {
//     @include grid-column( 1/3 );
//   }
//   .column-two-thirds {
//     @include grid-column( 2/3 );
//   }
//   .column-desktop-third {
//     @include grid-column( 1/3, $full-width: desktop );
//   }

@mixin grid-column($width, $full-width: desktop, $float: left) {    
    padding: 0 $gutter-half;
    @include box-sizing(border-box);
    @include media($full-width) {
        float: $float;
        width: percentage($width);
    }
    @include ie-lte(7) {
        width: (($site-width + $gutter) * $width) - $gutter;
    }
}

//-----------------------------------------------------------------
// Grid Layout
//-----------------------------------------------------------------

// Usage:
// For two equal columns

// <div class="grid-row">
//   <div class="column-half">
//
//   </div>
//   <div class="column-half">
//
//   </div>
// </div>

// Use .grid-row to define a row for grid columns to sit in
.grid-row {
    @extend %grid-row;
}

// Use .grid-column to create a grid column with 15px gutter
// By default grid columns break to become full width at tablet size
.column-quarter {
    @include grid-column( 1/4 );
}
.column-half {
    @include grid-column( 1/2 );
}
.column-third {
    @include grid-column( 1/3 );
}
.column-two-thirds {
    @include grid-column( 2/3 );
}
.column-three-quarters {
    @include grid-column( 3/4 );
}
.column-full-width {
    @include grid-column( 1/1 );
}